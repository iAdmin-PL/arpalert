.\" Copyright 2005 Thierry FOURNIER tfournier@numericable.fr
.\" Distributed under GPL
.\"
.TH ARPALERT 8 2005-07-19 "" "arp traffic monitoring"
.SH NAME
arpalert \- ARP traffic monitoring
.SH DESCRIPTION
Arpalert uses ARP protocol monitoring to prevent unauthorized connections on the local network. 
If an illegal connection is detected, a program or script is launched, which could be used to send an alert message, for example.
.SH COMMAND LINE
.TP
\fB\-d\fR
Run as daemon
.TP
\fB\-D log_level\fR
The level logged. the level are bitween 0 (emergency) and 7 (debug). if 3 is selected all levels bitween 0 and 3 arre logged.
.TP
\fB\-e exec_script\fR
Script launched when an alert is send
.TP
\fB\-h\fR
The help command line.
.TP
\fB\-i interface\fR 
Lesson this network interface
.TP
\fB\-f config_file\fR
Use this config file
.TP
\fB\-l leases_file\fR
This file contain a dump of the mac address in memory (see config file).
.TP
\fB\-p pid_file\fR
Use this pid file. this file contain a pid number of the arpalert session. if the file exist and his locked, the deamon do not run.
.TP
\fB\-P\fR
Set the interface in promiscuous mode (don't set this if only the arp analyse is used)
.TP
\fB\-v\fR
Watch on screen all the option selected (the options specified in config file and the default options)
.TP
\fB\-w\fR
Debug option: print a dump of paquets captured.
.\"
.\" CONFIG FILE
.\"
.SH CONFIGURATION FILE
The config file contain 3 types of data: integer, string and boolean. The boolean type can take values 'oui', 'true', 'yes', '1'
for the true values or 'non', 'no', 'false', '0' for the falses values.
.TP
\fBuser\fR = arpalert
Use privileges separation whith this user
.TP
\fBumask\fR = 177
Uses this mask for the files created
.TP
\fBchroot dir\fR = /usr/local/arpalert
Use this directory for program jail
.br
If this option is commented the program does not chroot
.br
The program read the config file and open the syslog socket before the chroot:
.br
The kill -HUP does not run with chroot.
.br
If the syslog program is restarted, the socket change and the arpalert syslog system can't be connect to the new socket:
the logs with syslog are disabled. Prefere to use the log file.
.br
All the path file are relative to the chroot dir (but not the config file)
.TP
\fBlog file\fR = /usr/local/arpalert/var/log/arpalert.log
The program log into this file
.br
If this option is commented, the internal system log is not used
.br
The internal system logs can be used in same time that syslog.
.TP
\fBlog level\fR = 6
The level logged. the level are bitween 0 (emergency) and 7 (debug). if 3 is selected all levels between 0 and 3 are logged.
.TP
\fBuse syslog\fR = true
If this option is false, the syslog system is disabled
.TP
\fBMaclist file\fR = /usr/local/arpalert/etc/arpalert/maclist.allow
white list
.TP
\fBMaclist alert file\fR = /usr/local/arpalert/etc/arpalert/maclist.deny
black list
.TP
\fBMaclist leases file\fR = /usr/local/arpalert/var/lib/arpalert/arpalert.leases
dump fil
.TP
\fBauth request file\fR = /usr/local/arpalert/etc/arpalert/authrq.conf
list of authorized request"
.TP
\fBLock file\fR = /usr/local/arpalert/var/run/arpalert.lock
pid file
.TP
\fBdump paquet\fR = false
Only for debugging: this dump paquet received on standard output
.TP
\fBdaemon\fR = false
if is set to true, run the program as daemon
.TP
\fBinterface\fR = ""
lesson this interface. If this value is not specified, the soft select the first interface.
.TP
\fBAction on detect\fR = ""
Script launched on each detection. Parameters are: \fBmac adress of requestor\fR, \fBip of requestor\fR, \fBsupp. parm.\fR, \fBtype of alert\fR
.IP
type of alert:
.br
\fB0:\fR IP change
.br
\fB1:\fR Mac address only detected but not in whithe list
.br
\fB2:\fR Mac address in black list
.br
\fB3:\fR New mac address
.br
\fB4:\fR Unauthorized arp request
.br
\fB5:\fR Abusive number of arp request detected
.br
\fB6:\fR Ethernet mac address different from arp mac address
.br
\fB7:\fR Flood detected
.br
\fB8:\fR New mac address whithout.br address
.TP
\fBIgnore me\fR = true
Permit to ignore packets whith the lessons interface mac address
.TP
\fBExecution timeout\fR = 10
script execution timeout (seconds)
.TP
\fBmax alert\fR = 20
maximun simultaneous lanched script
.TP
\fBDump black list\fR = false
dump the black listed mac address in leases file
.TP
\fBDump white list\fR = false
dump the white listed mac address in leases file
.TP
\fBDump new address\fR = true
dump the new mac address in leases file
.TP
\fBMac timeout\fR = 259200
after this time a mac adress is removed from memory (seconds) (default 1 month)
.TP
\fBMax entry\fR = 1000000
after this limit the memory hash is cleaned (protect to arp flood)
.TP
\fBanti flood interval\fR = 10
this permit to send only one mismatch alert in this time (in seconds)
.TP
\fBanti flood global\fR = 50
if the number of arp request in seconds exceed this value, all alerts are ignored for
"anti flood interval" time
.TP
\fBlog referenced address\fR = false
log if the adress is referenced in hash but is not in white list
.TP
\fBalert on referenced address\fR = false
launch script if the adress is referenced in hash but is not in white list
.TP
\fBlog deny address\fR = true
log if the mac adress is in black list
.TP
\fBalert on deny address\fR = true
launch script if the mac adress is in black list
.TP
\fBlog new address\fR = true
log if the adress isn't referenced
.TP
\fBalert on new address\fR = true
launch script if the adress isn't referenced
.TP
\fBlog ip change\fR = true
log if the ip adress id different from the last arp request with the same mac adress
.TP
\fBalert on ip change\fR = true
launch script if the ip adress id different from the last arp request with the same mac adress
.TP
\fBlog unauth request\fR = true
unauthorized arp request: log all the request not authorized in auth file
.TP
\fBalert on unauth request\fR = true
unauthorized arp request: launch script if the request are not authorized in auth file
.TP
\fBignore unknow sender\fR = true
dont analyse arp request for unknow hosts (not in white list)
.TP
\fBlog request abus\fR = true
log if the number of request per seconds are > "max request"
.TP
\fBalert on request abus\fR = true
launch script if the number of request per seconds are > "max request"
.TP
\fBMax request\fR = 1000000
maximun request authorized by second
.TP
\fBlog mac error\fR = true
log if the ethernet mac address are different than the arp amc address (only for requestor)
.TP
\fBalert on mac error\fR = true
launch script if the ethernet mac address are different than the arp amc address (only for requestor)
.TP
\fBlog flood\fR = true
log if have too many arp request per seconds
.TP
\fBalert on flood\fR = true
launch script if have too many arp request per seconds
.\"
.\" CONFIG FILE
.\"
.SH DATA FILES FORMATS
.TP
\fB/usr/local/arpalert/etc/arpalert/maclist.allow\fR and \fB/usr/local/arpalert/etc/arpalert/maclist.deny\fR:
all the line with # as a \fBfirst\fR caracter are ignored
.br
The data on this file take this form
.br
<MAC_ADRESS><BLANK_SPACE><IP_ADDRESS>
.TP
\fB/usr/local/arpalert/etc/arpalert/authrq.conf\fR:
all the line with # as a \fBfirst\fR caracter are ignored
.br
The data on this file take this form
.br
<MAC_ADRESS>[BLANK_SPACE]-[BLANK_SPACE]<IP_ADRESS>[BLANK_SPACE],[BLANK_SPACE]<IP_ADRESS>[BLANK_SPACE], ...
.\"
.\" CONFIG FILE
.\"
.SH FILES
\fBsbin/arpalert\fR: binary file
.br
\fBetc/arpalert/arpalert.conf\fR: default config file
.br
\fBvar/run/arpalert.pid\fR: pid file
.br
\fBvar/state/arpalert.leases\fR: leases file
.br
