# Process this file with autoconf to produce a configure script.
AC_INIT(arpalert, 0.3b)
AC_CONFIG_FILES(Makefile)
AC_CONFIG_HEADER(config.h)

# Checks for programs.
AC_PROG_CC
#AC_PREFIX_DEFAULT(/usr/local/arpalert)
AC_PREFIX_DEFAULT(/opt/arpalert)

# Checks for libraries.

# Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h netinet/in.h stdlib.h string.h execinfo.h)
AC_CHECK_HEADERS(sys/syslog.h syslog.h, forcesyslogno=0, forcesyslogno=1)
AC_CHECK_HEADERS(pcap.h, , echo "dont found pcap.h"; exit 1)

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_FORK
AC_FUNC_MALLOC
AC_CHECK_FUNCS(alarm)

#check if libpcap.so is ok
AC_CHECK_LIB(pcap, pcap_lookupdev)

###
# Enable syslog system
AC_ARG_WITH(syslog, [  --with-syslog	Turn on Syslog support (default=yes)], with_syslog=$withval, with_syslog=yes)
if test "x$with_syslog" != "xno"; then
	if test $forcesyslogno = 0; then
		AC_DEFINE(USE_SYSLOG, 1, [Whether we have SYSLOG])
	fi
fi

###
# debug definitions
AC_ARG_ENABLE(debug, [  --enable-debug	Turn on debug system (default=no)], enable_debug=$enableval, enable_debug=no)
if test "x$enable_debug" != "xno"; then
	AC_DEFINE(DEBUG, 1, [If is debug compilation])
fi

AC_ARG_ENABLE(debug_malloc, [  --enable-debug-malloc	Turn on Malloc debug system (default=no)], enable_debug_malloc=$enableval, enable_debug_malloc=no)
if test "x$enable_debug_malloc" != "xno"; then
	AC_DEFINE(DEBUG_MALLOC, 1, [If you want to debug malloc functions])
fi

AC_OUTPUT
